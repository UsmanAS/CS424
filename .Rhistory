install.packages("stringr")
library(stringr)
test <- str_replace()
test <- str_replace(litter$tags, "", "untagged")
test <- str_replace(litter$tags, NULL, "untagged")
test <- str_replace(litter$tags, "[]", "untagged")
test <- litter$tags
test[test==""] <- "untagged"
test[test==""] <- NA
test
test2 <- sub("<NA>" , "untagged", test)
test2
test2 <- sub("NA" , "untagged", test)
test2
test2 <- sub(NA , "untagged", test)
test2
test2 <- sub("<NA>" , "untagged", test)
test2
test
test2 <- sub(NA , "untagged", test)
test2
test2 <- sub("untagged", test)
test2 <- sub(NA, "untagged", test)
test2
test2 <- sub("untagged", NA, test)
test2
test[is.na(test)] = "untagged"
test
test2 <- replace_na(test, "untagged")
library(tidyr)
test2 <- replace_na(test, "untagged")
replace_na(test, "untagged")
test[test==""] <- NA
test
test2 <- replace_na("untagged")
test2
test <- replace_na("untagged")
test
test <- litter$tags
test
test[test==""] <- NA
test
test <- replace_na("untagged")
test
test <- litter$tags
test[test==""] <- NA
test2 <- replace_na(test, "untagged")
test2
test2 <- replace_na(test, value = "untagged")
table(replace_na(test, "untagged"))
ttest
test2
test2 <- replace_na(test, "untagged")
test2 <- replace_na(test, "untagged", stringAsFactors = FALSE)
test[is.na(test)] <- "untagged"
test <- factor(test)
test[is.na(test)] <- "untagged"
test <- as.character(test)
test[is.na(test)] <- "untagged"
test
<- sub("litterati-", "", litter$username)
fixedTags <- litter$tags
test <- as.character(test)
test[is.na(test)] <- "untagged"
fixedTags <- litter$tags
fixedTags <- as.character(fixedTags)
fixedTags[is.na(fixedTags)] <- "untagged"
fixedTags
fixedTags <- litter$tags
fixedTags <- as.character(fixedTags)
fixedTags[fixedTags== ""] <- "untagged"
fixedTags
fixedTags <- litter$tags
fixedTags[fixedTags== ""] <- "untagged"
fixedTags <- as.character(fixedTags)
fixedTags[fixedTags== ""] <- "untagged"
litter$tags <- fixedTags
str(litter)
View(litter)
View(litter)
source('~/Project1/P1 script.R')
View(litter)
View(litter)
totalPickup <- count(litter)
totalPickup
ggplot2(litter, aes(tags, timestamp())) +geom_bar(stat = "identity")
library(ggplot2)
ggplot2(litter, aes(tags, timestamp())) +geom_bar(stat = "identity")
ggplot(litter, aes(tags, timestamp())) +geom_bar(stat = "identity")
##------ Sun Feb 09 14:44:27 2020 ------##
##------ Sun Feb 09 14:44:27 2020 ------##
ggplot(litter, aes(tags, timestamp())) +geom_bar(stat = "identity") +geom_text()
##------ Sun Feb 09 14:45:41 2020 ------##
##------ Sun Feb 09 14:45:41 2020 ------##
##------ Sun Feb 09 14:45:41 2020 ------##
ggplot(litter, aes(tags, timestamp())) +geom_bar(stat = "identity") +coord_cartesian(ylim = c(65,90))
##------ Sun Feb 09 14:46:54 2020 ------##
##------ Sun Feb 09 14:46:54 2020 ------##
something.agg <- aggregate(sale ~ day, litter)
something.agg <- aggregate(litter ~ day, litter)
pickUpDate <- as.Date(litter$TimeStamp)
aggregate(litter, by=list(litter$TimeStamp), sum)
pickUpDate
aggregate(by = list(litter$TimeStamp), sum)
tapply(litter, format(timestamp('%m-%Y')), sum)
##------ %m-%Y ------##
tapply(litter, format(timestamp('%Y-%m')), sum)
##------ %Y-%m ------##
tapply(litter, format(pickUpDate('%Y-%m')), sum)
aggregate(litter, as.Date(time(litter)), sum())
aggregate(litter, as.Date(time(litter)), sum
)
aggregate(litter, as.Date(time(litter)), sum)
test3 <- tally(litter, sort = FALSE, name = "sum")
test3
test3 <- group_by(litter)
test3
ggplot(litter, aes(pickUpDate, frequency(pickUpDate)))
ggplot(litter, aes(pickUpDate, frequency(pickUpDate))) +geom_bar(stat = "identity")
ggplot(litter, aes(pickUpDate, frequency(pickUpDate))) +geom_bar(fill = "red", stat = "identity")
ggplot(litter, aes(pickUpDate, frequency(pickUpDate))) +geom_bar(fill = "light blue", stat = "identity")
ggplot(litter, aes(pickUpDate, frequency(pickUpDate))) +geom_bar(fill = "green", stat = "identity")
ggplot(litter, aes(pickUpDate, frequency(pickUpDate))) +geom_bar(fill = "black", stat = "identity")
ggplot(litter, aes(pickUpDate, frequency(pickUpDate))) +geom_bar(fill = "black", stat = "identity") + labs(title = "Each Day Pick Up", x = "Day", y = "Amount Picked up")
ggplot(litter, aes(pickUpDate, frequency(pickUpDate))) +geom_bar(fill = "black", stat = "identity") + labs(title = "Each Day Pick Up", x = "Day", y = "Amount")
pickUp <- table(pickUpDate, frequency(pickUpDate))
pickUp <- as.table(pickUpDate, frequency(pickUpDate))
pickUp <- as.data.frame(pickUpDate, frequency(pickUpDate))
ggplot(litter, aes(pickUpDate, frequency(pickUpDate))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Day Pick Up", x = "Day", y = "Amount")
ggplot(litter, aes(pickUpDate, frequency(pickUpDate))) +geom_bar(fill = "black", stat = "identity") + labs(title = "Each Day Pick Up", x = "Day", y = "Amount")
table(pickUpDate)
View(pickUp)
View(pickUp)
View(pickUp)
View(pickUp)
tab <- table(cut(pickUpDate), 'day')
tab <- table(cut(pickUpDate, 'day'))
tab
data.frame(Date=format(as.Date(names(tab)), '%Y-%m-%d'), Frequency = as.vector(tab))
test <- data.frame(Date=format(as.Date(names(tab)), '%Y-%m-%d'), Frequency = as.vector(tab))
view(test)
View(test)
View(test)
Days <- table(cut(pickUpDate, 'day'))
PickUpDateChart <- data.frame(Date=format(as.Date(names(Days)), '%Y-%m-%d'), Frequency = as.vector(Days))
View(PickUpDateChart)
View(PickUpDateChart)
source('~/Project1/P1 script.R')
source('~/Project1/P1 script.R')
source('~/Project1/P1 script.R')
ggplot(litter, aes(pickUpDate, frequency(pickUpDate))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Day Pick Up", x = "Day", y = "Amount")
test <- wday(pickUpDate)
test
test <- weekday(pickUpDate)
test <- weekdays(pickUpDate)
test
ggplot(litter, aes(test, frequency(test))) +geom_bar(fill = "black", stat = "identity") + labs(title = "Each Day Pick Up", x = "Day", y = "Amount")
Days
test2 <- table(cut(test, 'weekday'))
test3 <- wdays(pickUpDate)
test3 <- wday(pickUpDate)
test3 <- table(cut(test, 'weekday'))
test4 <- table(cut(test3, 'weekday'))
test3
test4 <- table(cut(test3, 'day'))
test
test2 <- table(test)
test2
PickUpDateChart <- data.frame(Date=format(as.Date(names(Days)), '%Y-%m-%d'), Frequency = as.vector(Days))
PickUpDateWeekdayChart <- data.frame(Date=format(as.Date(names(Days)), '%A'), Frequency = as.vector(Days))
View(PickUpDateWeekdayChart)
View(PickUpDateWeekdayChart)
PickUpDateWeekdayChart <- data.frame(Date=format(as.Date(names(test2)), '%A'), Frequency = as.vector(test2))
test2
PickUpDateWeekdayChart <- data.frame(test2, Frequency = as.vector(test2))
PickUpDateWeekdayChart <- data.frame(test2)
WeekdayPickUp <- weekdays(pickUpDate)
WeekdayPickUp
WeekDayTablePickup <- table(WeekdayPickUp)
WeekDayTablePickup
WeekDayTablePickup <- data.frame(WeekdayPickUp)
WeekDayTablePickup
WeekDayTablePickup <- table(WeekdayPickUp)
WeekDayTablePickup
WeekDayTablePickup <- data.frame(WeekdayTablePickUp)
WeekDayTablePickup <- data.frame(WeekDayTablePickup)
WeekDayTablePickup
source('~/Project1/P1 script.R')
source('~/Project1/P1 script.R')
View(WeekdayTablePickup)
View(WeekdayTablePickup)
View(totalPickup)
View(totalPickup)
View(PickUpDateChart)
View(PickUpDateChart)
WeekdayPickup <- factor(WeekdayPickup, levels =
c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
WeekdayPickup[order(WeekdayPickup)]
WeekdayTablePickup <- table(WeekdayPickup)
WeekdayTablePickup <- data.frame(WeekdayTablePickup)
View(WeekdayTablePickup)
View(WeekdayTablePickup)
ggplot(litter, aes(WeekdayPickup, frequency(WeekdayPickup))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Weekday Pick Up", x = "Weekday", y = "Amount")
pickUpDate
pickUpTimeHour <- hour(litter$TimeStamp)
pickUpTimeHour
pickUpTimeHourTable <- table(pickUpTimeHour)
pickUpTimeHourTable
pickUpTimeHourTable <- data.fram(pickUpTimeHourTable)
pickUpTimeHourTable <- data.frame(pickUpTimeHourTable)
pickUpTimeHourTable
ggplot(litter, aes(WeekdayPickup, frequency(WeekdayPickup))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Weekday Pick Up", x = "Weekday", y = "Amount")
ggplot(litter, aes(pickUpTimeHour, frequency(pickUpTimeHour)) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Hour Pick Up", x = "Hour", y = "Amount")
)
ggplot(litter, aes(pickUpTimeHour, frequency(pickUpTimeHour))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Hour Pick Up", x = "Hour", y = "Amount")
View(pickUpTimeHourTable)
View(pickUpTimeHourTable)
ggplot(litter, aes(pickUpTimeHour, frequency(pickUpTimeHour))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Hour Pick Up", x = "Hour", y = "Amount")
test <- litter$tags
test
test <- unlist(test)
test
test2 <- unlist(strsplit(test, split= ","))
test2
test3 <- table(test2)
test3
test2 <- unlist(strsplit(test, split= " "))
test3 <- table(test2)
test3 <- data.frame(test2)
test3
View(test3)
View(test3)
test2 <- unlist(strsplit(test, split= " "))
test2 <- unlist(strsplit(test2, split= ","))
test3 <- table(test2)
test3 <- table(test3)
test3 <- table(test2)
test3 <- table(test2)
test3[1,10]
test3[10]
test3Top <- arrange(test3, desc(test3$freq))
test3
test3 <- data.frame(test2)
test3
View(test3)
View(test3)
test2
test3
test2
test3 <- table(test2)
test3
test3 <- data.frame(test3)
test3
test3Top <- arrange(test3, test3$Freq)
test3Top
test3Top <- top_n(test3Top, 10)
test3Top
test3Top <- arrange(test3, desc(test3$Freq))
test3Top
test3Top <- arrange(test3, desc(test3$Freq))
test3Top
test3Top <- top_n(test3Top, 10)
test3Top
TagTable <- unlist(strsplit(litter$tags, split = ","))
TagTable <- unlist(strsplit(TagTable, split = " "))
TagTable <- table(TagTable)
TagTable <- data.frame(TagTable)
TagTableTop <- arrange(TagTable, desc(TagTable$Freq))
TagTableTop <- arrange(TagTable, desc(TagTable$freq))
View(TagTable)
View(TagTable)
TagTableTop <- arrange(TagTable, desc(TagTable$Freq))
View(TagTable)
View(TagTable)
TagTableTop <- arrange(TagTable, desc(TagTable$freq))
TTF <- TagTable$Freq
TagTableTop <- arrange(TagTable, desc(TTF))
TagTableTop <- top_n(TagTableTop, 10)
View(TagTableTop)
View(TagTableTop)
ggplot(litter, aes(TagTableTop, frequency(TagTableTop))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(litter, aes(TagTableTop, frequency(TagTableTop))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTableTop, aes(TagTableTop, frequency(TagTableTop))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTableTop, aes_string(TagTableTop, frequency(TagTableTop))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(aes(TagTableTop, frequency(TagTableTop))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTableTop, aes_string(TagTableTop, frequency(TagTableTop))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTableTop, aes(TagTableTop, frequency(TagTableTop))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTableTop, aes(x = TagTableTop, y = frequency(TagTableTop))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(litter, aes(TagTable, frequency(TagTable))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
TagTable <- table(TagTable)
ggplot(litter, aes(TagTable, frequency(TagTable))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(litter, aes(TagTable, FReq) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(litter, aes(TagTable, frequency(TagTable))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(litter, aes(x = TagTable, y = Freq) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(litter, aes(x = TagTable, y = Freq) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(litter, aes(x = TagTable, y = Freq)) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(litter, aes(x = TagTable, y = freq)) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTable, aes(x = TagTable, y = freq)) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
TagTable <- data.frame(TagTable)
ggplot(TagTable, aes(x = TagTable, y = freq)) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTable, aes(x = TagTable, y = frequency(TagTable))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
TagTable <- data.frame(TagTable)
ggplot(TagTable, aes(x = TagTable, y = frequency(TagTable))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTableTop, aes(x = TagTableTop, y = frequency(TagTableTop))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
View(TagTableTop)
View(TagTableTop)
ggplot(TagTable, aes(x = TagTable, y = frequency(TagTable))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
TagTable <- unlist(strsplit(litter$tags, split = ","))
TagTable <- unlist(strsplit(TagTable, split = " "))
ggplot(TagTable, aes(x = TagTable, y = frequency(TagTable))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Top 10 Tag Pick Up", x = "Tag", y = "Amount")
WeekdayTablePickup <- table(WeekdayPickup)
WeekdayTablePickup <- data.frame(WeekdayTablePickup)
ggplot(litter, aes(WeekdayPickup, frequency(WeekdayPickup))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Weekday Pick Up", x = "Weekday", y = "Amount")
TagTable <- unlist(strsplit(litter$tags, split = ","))
TagTable <- unlist(strsplit(TagTable, split = " "))
TagTable <- table(TagTable)
TagTable <- data.frame(TagTable)
TTF <- TagTable$Freq
TagTableTop <- arrange(TagTable, desc(TTF))
TagTableTop <- top_n(TagTableTop, 10)
TagTableTop
ggplot(TagTableTop)
ggplot(TagTableTop) + geom_bar(fill = "black", stat = "identity")
ggplot(TagTableTop, x, y) + geom_bar(fill = "black", stat = "identity")
ggplot(TagTableTop, x = TagTableTop, y = TTF) + geom_bar(fill = "black", stat = "identity")
ggplot(TagTableTop, aes(x = TagTableTop, y = TTF)) + geom_bar(fill = "black", stat = "identity")
ggplot(TagTableTop, aes_string(x = TagTableTop, y = TTF)) + geom_bar(fill = "black", stat = "identity")
ggplot(litter, aes_string(x = litter$tags, y = TTF)) + geom_bar(fill = "black", stat = "identity")
ggplot(litter, aes_string(x = TagTable, y = TTF)) + geom_bar(fill = "black", stat = "identity")
ggplot(litter, aes(x = TagTable, y = TTF)) + geom_bar(fill = "black", stat = "identity")
ggplot(litter, aes(x = TagTable, y = frequency(TagTable))) + geom_bar(fill = "black", stat = "identity")
ggplot(TagTable, aes(x = TagTable, y = frequency(TagTable))) + geom_bar(fill = "black", stat = "identity")
ggplot(TagTable, aes(TagTable, frequency(TagTable))) + geom_bar(fill = "black", stat = "identity")
ggplot(litter, aes(TagTable, frequency(TagTable))) + geom_bar(fill = "black", stat = "identity")
ggplot(TagTable, aes(TagTable, frequency(TagTable))) + geom_bar(fill = "black", stat = "identity")
ggplot(TagTableTop, aes(TagTableTop, frequency(TagTableTop))) + geom_bar(fill = "black", stat = "identity")
ggplot(TagTable, aes(TagTable, frequency(TagTable))) + geom_bar(fill = "black", stat = "identity") + coord_cartesian(ylim = c(0,100))
ggplot(TagTable, aes(TagTable, frequency(TagTable))) + geom_bar(fill = "black", stat = "identity") + coord_cartesian(ylim = c(0,20))
ggplot(TagTable, aes(TagTable, frequency(TagTable))) + geom_bar(fill = "black", stat = "identity") + coord_cartesian(ylim = c(0,2))
TagTable
View(TagTable)
View(TagTable)
ggplot(TagTable, aes(TagTable, TagTable$Freq)) + geom_bar(fill = "black", stat = "identity") + coord_cartesian(ylim = c(0,20))
t4 <- TagTable$Freq
ggplot(TagTable, aes(TagTable, t4)) + geom_bar(fill = "black", stat = "identity") + coord_cartesian(ylim = c(0,20))
ggplot(TagTable, aes(TagTable, t4)) + geom_bar(fill = "black", stat = "identity")
ggplot(TagTableTop, aes(TagTableTop, TTF)) + geom_bar(fill = "black", stat = "identity")
ggplot(TagTable, aes(TagTableTop, TTF)) + geom_bar(fill = "black", stat = "identity")
ggplot(data = TagTableTop + geom_bar(fill = "black", stat = "identity")
f
ggplot(data = TagTableTop) + geom_bar(fill = "black", stat = "identity")
ggplot(data = TagTableTop)
x <- ggplot(TagTableTop)
x
View(x)
View(x)
x + geom_bar()
x <- ggplot(TagTableTop, aes(TagTableTop$Freq))
x
x + geom_bar()
x <- ggplot(TagTableTop, aes(TTF))
x + geom_bar()
TTF
TagTableTop$Freq
TTTF <- TagTableTop$Freq
x <- ggplot(TagTableTop, aes(TTTF))
x + geom_bar()
ggplot(TagTableTop, aes(TagTableTop, TTTF)) + geom_bar(fill = "black", stat = "identity")
TTTF
TagTableTop
ggplot(TagTableTop, aes(TagTable, TTTF)) + geom_bar(fill = "black", stat = "identity")
source('~/Project1/P1 script.R')
ggplot(TagTableTop, aes(TagTable, TagTableTop$Freq))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTableTop, aes(TagTable, TagTable$Freq))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTableTop, aes(TagTable, TagTable$Freq))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Tag Pick Up", x = "Tag", y = "Amount")
TTTF <- TagTableTop$Freq
ggplot(TagTableTop, aes(TagTable, TTTF))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTableTop, aes(TagTableTop, TTTF))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Tag Pick Up", x = "Tag", y = "Amount")
ggplot(litter, aes(WeekdayPickup, frequency(WeekdayPickup))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Weekday Pick Up", x = "Weekday", y = "Amount")
WeekdayTablePickup <- table(WeekdayPickup)
ggplot(TagTableTop, aes(TagTableTop, TTTF))) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTableTop, aes(TagTableTop, TTTF)) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Tag Pick Up", x = "Tag", y = "Amount")
ggplot(TagTableTop, aes(TagTable, TTTF)) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Tag Pick Up", x = "Tag", y = "Amount")
TTTF <- TagTableTop$Freq
ggplot(TagTableTop, aes(TagTable, TTTF)) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Tag Pick Up", x = "Tag", y = "Amount")
TagTable <- unlist(strsplit(litter$tags, split = ","))
TagTable <- unlist(strsplit(TagTable, split = " "))
TagTable <- table(TagTable)
TagTable <- data.frame(TagTable)
TTF <- TagTable$Freq
TagTableTop <- arrange(TagTable, desc(TTF))
TagTableTop <- top_n(TagTableTop, 10)
TTTF <- TagTableTop$Freq
ggplot(TagTableTop, aes(TagTable, TTTF)) +
geom_bar(fill = "black", stat = "identity") +
labs(title = "Each Tag Pick Up", x = "Tag", y = "Amount")
View(totalPickup)
View(totalPickup)
ggplot(TagTableTop, aes(TagTable, TTTF)) +
g
totalPickup
x <- as.numeric(totalPickup)
x
totalPickup <- as.numberic(count(litter))
totalPickup <- as.numeric(count(litter))
totalPickup
rsconnect::setAccountInfo(name='usmansiddiqui', token='3364A28D778B965D1ABD131E9DBFC399', secret='1v/zLmnZ0GUKbkLkHHwZ9eR6ukfaskwVCHDuYTDz')
shiny::runApp()
library(rsconnect)
shiny::runApp()
deployApp()
rsconnect::setAccountInfo(name='usmansiddiqui', token='3364A28D778B965D1ABD131E9DBFC399', secret='1v/zLmnZ0GUKbkLkHHwZ9eR6ukfaskwVCHDuYTDz')
deployApp()
deployApp()
source('~/Project1/P1 script.R')
library(shiny); runApp('P1 script.R')
runApp('P1 script.R')
runApp('P1 script.R')
runApp('P1 script.R')
runApp('P1 script.R')
runApp('P1 script.R')
runApp('P1 script.R')
install.packages(fingerprint)
install.packages("fingerprint")
runApp('P1 script.R')
install.packages("fingerprint")
install.packages("fingerprint")
runApp('P1 script.R')
runApp('P1 script.R')
runApp('P1 script.R')
